// <auto-generated />
using System;
using FocusBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FocusBackend.Migrations
{
    [DbContext(typeof(FocusContext))]
    partial class FocusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FocusBackend.Models.Activity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<DateTime>("Completion");

                    b.Property<DateTime>("Creation");

                    b.Property<string>("Description");

                    b.Property<int>("Importance");

                    b.Property<string>("Name");

                    b.Property<int>("Urgency");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Activities");

                    b.HasData(
                        new { ID = 1, CategoryID = 1, Completion = new DateTime(2019, 11, 18, 15, 20, 56, 307, DateTimeKind.Local), Creation = new DateTime(2019, 11, 18, 15, 20, 56, 305, DateTimeKind.Local), Description = "test", Importance = 1, Name = "test", Urgency = 1 }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.Business", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<string>("Industry");

                    b.Property<string>("Name");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Businesses");

                    b.HasData(
                        new { ID = 1, Image = "test", Industry = "test", Name = "test", UserID = 1 }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessID");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("BusinessID");

                    b.ToTable("Categories");

                    b.HasData(
                        new { ID = 1, BusinessID = 1, Description = "test", Name = "test" }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = 1, Email = "test", Image = "test", Name = "test", Phone = "test" }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.Activity", b =>
                {
                    b.HasOne("FocusBackend.Models.Category", "Category")
                        .WithMany("Activities")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FocusBackend.Models.Business", b =>
                {
                    b.HasOne("FocusBackend.Models.User", "User")
                        .WithMany("Businesses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FocusBackend.Models.Category", b =>
                {
                    b.HasOne("FocusBackend.Models.Business", "Business")
                        .WithMany("Categories")
                        .HasForeignKey("BusinessID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
